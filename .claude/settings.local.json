{
  "permissions": {
    "allow": [
      "Bash(git init:*)",
      "mcp__brave-search__brave_web_search",
      "Bash(git clone:*)",
      "Bash(git submodule add:*)",
      "Bash(python3:*)",
      "Bash(claude mcp:*)",
      "Bash(chmod:*)",
      "Bash(cat:*)",
      "Bash(ls:*)",
      "Bash(npx:*)",
      "Bash(touch:*)",
      "Bash(echo $SHELL)",
      "Bash(find:*)",
      "Bash(claude --mcp-status)",
      "Bash(npm search:*)",
      "Bash(npm audit:*)",
      "mcp__ide__getDiagnostics",
      "mcp__ide__executeCode",
      "Bash(mkdir:*)",
      "Bash(--ultrathink \"Create comprehensive Supabase client configuration with TypeScript support, error handling, and real-time capabilities. The client should handle authentication, database operations, storage, and subscriptions. Include proper type definitions and error boundaries.\")",
      "Bash(npm install:*)",
      "Bash(--ultrathink \"Configure Playwright for comprehensive E2E testing with multi-browser support, test fixtures, authentication state management, visual testing capabilities, and CI/CD integration. Set up test environments for development, staging, and production testing with proper error handling and reporting.\")",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run lint)",
      "Bash(npm run build:*)",
      "Bash(npm run dev:*)",
      "Bash(npm test:*)",
      "Bash(node:*)",
      "mcp__c7-mcp-server__c7_query",
      "Bash(grep:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(rm:*)",
      "Bash(npm run dev:*)",
      "Bash(pkill:*)",
      "Bash(npm view:*)",
      "Bash(timeout 30s npm run lint)",
      "Bash(claude settings location)",
      "Bash(timeout 15s npm run dev)",
      "Bash(cp:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(mv:*)",
      "Bash(curl:*)",
      "Bash(bash:*)",
      "Bash(npm run verify:production:*)",
      "Bash(timeout 5s npm run preview)",
      "Bash(jobs)",
      "Bash(wc:*)",
      "WebSearch",
      "Bash(npm run test:*)",
      "Bash(git add:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(gh:*)",
      "Bash(git remote remove:*)",
      "Bash(git commit:*)",
      "Bash(npm run lint:*)",
      "Bash(npm ci:*)",
      "Bash(npm ls:*)",
      "Bash(npm why:*)",
      "Bash(timeout 15 npm run dev)",
      "Bash(npm update:*)",
      "Bash(npm remove:*)",
      "Bash(yamllint:*)",
      "Bash(__NEW_LINE__ echo \"Verifying that remaining env references are in job steps (which is valid):\")",
      "Bash(npm run security:validate:*)",
      "Bash(vercel ls:*)",
      "Bash(vercel status:*)",
      "Bash(vercel domains:*)",
      "Bash(vercel logs:*)",
      "Bash(vercel:*)",
      "Bash(./test-monitoring.sh:*)",
      "Bash(nslookup:*)"
    ],
    "deny": []
  }
}